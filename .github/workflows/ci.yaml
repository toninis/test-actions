name: ci

on:
  push:

env:
  TERM: xterm
  ENVIRONMENT: test

jobs:
  test-script:
    runs-on: ubuntu-22.04
    environment: ${ENVIRONMENT}
    steps:
      - run: |
          echo $VAR_1
          echo $VAR_2

      - name: ci/install-octokit
        run: npm install @octokit/request

      - name: ci/fetch-env-vars
        uses: actions/github-script@v6
        with:
          script: |
            const { request } = require("@octokit/request");

            core.startGroup("Exporting Variables");
            const vars = await request('GET /repositories/{repository_id}/environments/{environment_name}/variables', {
              headers: {
                authorization: "token ${{ secrets.TEMP_PAT }}",
              },
              repository_id: '${{ github.repository_id }}',
              environment_name: '${{ env.ENVIRONMENT }}',
            });

            console.log(`${vars.data.total_count} variables found`)
            vars.data.variables.forEach(function (item) {
              core.exportVariable(item['name'], item['value']);
            });
            core.endGroup();

      - run: |
          echo $VAR_1
          echo $VAR_2

  # tag-nightly-build:
  #   runs-on: ubuntu-22.04
  #   outputs:
  #     tag: ${{ steps.tag-creation.outputs.tag }}
  #   steps:
  #     - name: nightly/checkout-repo
  #       uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
  #     - name: nightly/patch-version
  #       uses: ./.github/actions/patch-nightly-version
  #     - name: nightly/create-nightly-build-tag
  #       id: tag-creation
  #       run: |
  #         git config --global user.email "nightly-build@mattermost.com"
  #         git config --global user.name "Nightly Build"
  #         git checkout -b "$(jq -r .version package.json)"
  #         git add package.json
  #         git commit -m "Nightly build $(jq -r .version package.json)"
  #         git tag "$(jq -r .version package.json)" -m "Nightly build $(jq -r .version package.json)"
  #         git push --tags --force
  #         echo "tag=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

  # spin-workflow:
  #   uses: ./.github/workflows/test.yaml
  #   needs:
  #     - tag-nightly-build
  #   with:
  #     tag: ${{ needs.tag-nightly-build.outputs.tag }}

  # spin-workflow2:
  #   uses: ./.github/workflows/test2.yaml
  #   needs:
  #     - tag-nightly-build
  #   with:
  #     tag: ${{ needs.tag-nightly-build.outputs.tag }}
